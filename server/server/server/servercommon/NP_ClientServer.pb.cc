// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NP_ClientServer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NP_ClientServer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace net_protocol {

namespace {

const ::google::protobuf::Descriptor* C2SRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SPlatformLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SPlatformLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SBingPhoneNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SBingPhoneNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSendSMSCodeToPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSendSMSCodeToPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SEnterGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SEnterGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SHeartBeat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SHeartBeat_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_NP_5fClientServer_2eproto() {
  protobuf_AddDesc_NP_5fClientServer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "NP_ClientServer.proto");
  GOOGLE_CHECK(file != NULL);
  C2SRegister_descriptor_ = file->message_type(0);
  static const int C2SRegister_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRegister, line_no_),
  };
  C2SRegister_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2SRegister_descriptor_,
      C2SRegister::default_instance_,
      C2SRegister_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRegister, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRegister, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2SRegister));
  C2SLogin_descriptor_ = file->message_type(1);
  static const int C2SLogin_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLogin, init_user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLogin, user_pwd_),
  };
  C2SLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2SLogin_descriptor_,
      C2SLogin::default_instance_,
      C2SLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2SLogin));
  C2SPlatformLogin_descriptor_ = file->message_type(2);
  static const int C2SPlatformLogin_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlatformLogin, line_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlatformLogin, init_user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlatformLogin, verify_param_),
  };
  C2SPlatformLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2SPlatformLogin_descriptor_,
      C2SPlatformLogin::default_instance_,
      C2SPlatformLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlatformLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlatformLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2SPlatformLogin));
  C2SBingPhoneNumber_descriptor_ = file->message_type(3);
  static const int C2SBingPhoneNumber_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBingPhoneNumber, user_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBingPhoneNumber, phone_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBingPhoneNumber, sms_code_),
  };
  C2SBingPhoneNumber_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2SBingPhoneNumber_descriptor_,
      C2SBingPhoneNumber::default_instance_,
      C2SBingPhoneNumber_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBingPhoneNumber, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBingPhoneNumber, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2SBingPhoneNumber));
  C2SSendSMSCodeToPlayer_descriptor_ = file->message_type(4);
  static const int C2SSendSMSCodeToPlayer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSendSMSCodeToPlayer, phone_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSendSMSCodeToPlayer, code_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSendSMSCodeToPlayer, selfparams_),
  };
  C2SSendSMSCodeToPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2SSendSMSCodeToPlayer_descriptor_,
      C2SSendSMSCodeToPlayer::default_instance_,
      C2SSendSMSCodeToPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSendSMSCodeToPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSendSMSCodeToPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2SSendSMSCodeToPlayer));
  C2SEnterGame_descriptor_ = file->message_type(5);
  static const int C2SEnterGame_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterGame, init_user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterGame, user_pwd_),
  };
  C2SEnterGame_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2SEnterGame_descriptor_,
      C2SEnterGame::default_instance_,
      C2SEnterGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterGame, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterGame, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2SEnterGame));
  C2SHeartBeat_descriptor_ = file->message_type(6);
  static const int C2SHeartBeat_offsets_[1] = {
  };
  C2SHeartBeat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2SHeartBeat_descriptor_,
      C2SHeartBeat::default_instance_,
      C2SHeartBeat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SHeartBeat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SHeartBeat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2SHeartBeat));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_NP_5fClientServer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2SRegister_descriptor_, &C2SRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2SLogin_descriptor_, &C2SLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2SPlatformLogin_descriptor_, &C2SPlatformLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2SBingPhoneNumber_descriptor_, &C2SBingPhoneNumber::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2SSendSMSCodeToPlayer_descriptor_, &C2SSendSMSCodeToPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2SEnterGame_descriptor_, &C2SEnterGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2SHeartBeat_descriptor_, &C2SHeartBeat::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_NP_5fClientServer_2eproto() {
  delete C2SRegister::default_instance_;
  delete C2SRegister_reflection_;
  delete C2SLogin::default_instance_;
  delete C2SLogin_reflection_;
  delete C2SPlatformLogin::default_instance_;
  delete C2SPlatformLogin_reflection_;
  delete C2SBingPhoneNumber::default_instance_;
  delete C2SBingPhoneNumber_reflection_;
  delete C2SSendSMSCodeToPlayer::default_instance_;
  delete C2SSendSMSCodeToPlayer_reflection_;
  delete C2SEnterGame::default_instance_;
  delete C2SEnterGame_reflection_;
  delete C2SHeartBeat::default_instance_;
  delete C2SHeartBeat_reflection_;
}

void protobuf_AddDesc_NP_5fClientServer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025NP_ClientServer.proto\022\014net_protocol\"\036\n"
    "\013C2SRegister\022\017\n\007line_no\030\001 \002(\t\"4\n\010C2SLogi"
    "n\022\026\n\016init_user_name\030\001 \002(\t\022\020\n\010user_pwd\030\002 "
    "\002(\t\"Q\n\020C2SPlatformLogin\022\017\n\007line_no\030\001 \002(\t"
    "\022\026\n\016init_user_name\030\002 \002(\t\022\024\n\014verify_param"
    "\030\003 \001(\t\"O\n\022C2SBingPhoneNumber\022\021\n\tuser_cod"
    "e\030\001 \002(\t\022\024\n\014phone_number\030\002 \002(\t\022\020\n\010sms_cod"
    "e\030\003 \002(\t\"U\n\026C2SSendSMSCodeToPlayer\022\024\n\014pho"
    "ne_number\030\001 \002(\t\022\021\n\tcode_type\030\002 \002(\t\022\022\n\nse"
    "lfparams\030\003 \002(\t\"8\n\014C2SEnterGame\022\026\n\016init_u"
    "ser_name\030\001 \002(\t\022\020\n\010user_pwd\030\002 \002(\t\"\016\n\014C2SH"
    "eartBeat", 448);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NP_ClientServer.proto", &protobuf_RegisterTypes);
  C2SRegister::default_instance_ = new C2SRegister();
  C2SLogin::default_instance_ = new C2SLogin();
  C2SPlatformLogin::default_instance_ = new C2SPlatformLogin();
  C2SBingPhoneNumber::default_instance_ = new C2SBingPhoneNumber();
  C2SSendSMSCodeToPlayer::default_instance_ = new C2SSendSMSCodeToPlayer();
  C2SEnterGame::default_instance_ = new C2SEnterGame();
  C2SHeartBeat::default_instance_ = new C2SHeartBeat();
  C2SRegister::default_instance_->InitAsDefaultInstance();
  C2SLogin::default_instance_->InitAsDefaultInstance();
  C2SPlatformLogin::default_instance_->InitAsDefaultInstance();
  C2SBingPhoneNumber::default_instance_->InitAsDefaultInstance();
  C2SSendSMSCodeToPlayer::default_instance_->InitAsDefaultInstance();
  C2SEnterGame::default_instance_->InitAsDefaultInstance();
  C2SHeartBeat::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_NP_5fClientServer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_NP_5fClientServer_2eproto {
  StaticDescriptorInitializer_NP_5fClientServer_2eproto() {
    protobuf_AddDesc_NP_5fClientServer_2eproto();
  }
} static_descriptor_initializer_NP_5fClientServer_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int C2SRegister::kLineNoFieldNumber;
#endif  // !_MSC_VER

C2SRegister::C2SRegister()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2SRegister::InitAsDefaultInstance() {
}

C2SRegister::C2SRegister(const C2SRegister& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2SRegister::SharedCtor() {
  _cached_size_ = 0;
  line_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SRegister::~C2SRegister() {
  SharedDtor();
}

void C2SRegister::SharedDtor() {
  if (line_no_ != &::google::protobuf::internal::kEmptyString) {
    delete line_no_;
  }
  if (this != default_instance_) {
  }
}

void C2SRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRegister_descriptor_;
}

const C2SRegister& C2SRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NP_5fClientServer_2eproto();
  return *default_instance_;
}

C2SRegister* C2SRegister::default_instance_ = NULL;

C2SRegister* C2SRegister::New() const {
  return new C2SRegister;
}

void C2SRegister::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_line_no()) {
      if (line_no_ != &::google::protobuf::internal::kEmptyString) {
        line_no_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2SRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string line_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->line_no().data(), this->line_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2SRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string line_no = 1;
  if (has_line_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->line_no().data(), this->line_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->line_no(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2SRegister::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string line_no = 1;
  if (has_line_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->line_no().data(), this->line_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->line_no(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2SRegister::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string line_no = 1;
    if (has_line_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->line_no());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRegister::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2SRegister* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SRegister*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SRegister::MergeFrom(const C2SRegister& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_line_no()) {
      set_line_no(from.line_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2SRegister::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRegister::CopyFrom(const C2SRegister& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRegister::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2SRegister::Swap(C2SRegister* other) {
  if (other != this) {
    std::swap(line_no_, other->line_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2SRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRegister_descriptor_;
  metadata.reflection = C2SRegister_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2SLogin::kInitUserNameFieldNumber;
const int C2SLogin::kUserPwdFieldNumber;
#endif  // !_MSC_VER

C2SLogin::C2SLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2SLogin::InitAsDefaultInstance() {
}

C2SLogin::C2SLogin(const C2SLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2SLogin::SharedCtor() {
  _cached_size_ = 0;
  init_user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  user_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SLogin::~C2SLogin() {
  SharedDtor();
}

void C2SLogin::SharedDtor() {
  if (init_user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete init_user_name_;
  }
  if (user_pwd_ != &::google::protobuf::internal::kEmptyString) {
    delete user_pwd_;
  }
  if (this != default_instance_) {
  }
}

void C2SLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SLogin_descriptor_;
}

const C2SLogin& C2SLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NP_5fClientServer_2eproto();
  return *default_instance_;
}

C2SLogin* C2SLogin::default_instance_ = NULL;

C2SLogin* C2SLogin::New() const {
  return new C2SLogin;
}

void C2SLogin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_init_user_name()) {
      if (init_user_name_ != &::google::protobuf::internal::kEmptyString) {
        init_user_name_->clear();
      }
    }
    if (has_user_pwd()) {
      if (user_pwd_ != &::google::protobuf::internal::kEmptyString) {
        user_pwd_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2SLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string init_user_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_init_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->init_user_name().data(), this->init_user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_user_pwd;
        break;
      }

      // required string user_pwd = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user_pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_pwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->user_pwd().data(), this->user_pwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2SLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string init_user_name = 1;
  if (has_init_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->init_user_name().data(), this->init_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->init_user_name(), output);
  }

  // required string user_pwd = 2;
  if (has_user_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_pwd().data(), this->user_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->user_pwd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2SLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string init_user_name = 1;
  if (has_init_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->init_user_name().data(), this->init_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->init_user_name(), target);
  }

  // required string user_pwd = 2;
  if (has_user_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_pwd().data(), this->user_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_pwd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2SLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string init_user_name = 1;
    if (has_init_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->init_user_name());
    }

    // required string user_pwd = 2;
    if (has_user_pwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_pwd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2SLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SLogin::MergeFrom(const C2SLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_init_user_name()) {
      set_init_user_name(from.init_user_name());
    }
    if (from.has_user_pwd()) {
      set_user_pwd(from.user_pwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2SLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SLogin::CopyFrom(const C2SLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void C2SLogin::Swap(C2SLogin* other) {
  if (other != this) {
    std::swap(init_user_name_, other->init_user_name_);
    std::swap(user_pwd_, other->user_pwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2SLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SLogin_descriptor_;
  metadata.reflection = C2SLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2SPlatformLogin::kLineNoFieldNumber;
const int C2SPlatformLogin::kInitUserNameFieldNumber;
const int C2SPlatformLogin::kVerifyParamFieldNumber;
#endif  // !_MSC_VER

C2SPlatformLogin::C2SPlatformLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2SPlatformLogin::InitAsDefaultInstance() {
}

C2SPlatformLogin::C2SPlatformLogin(const C2SPlatformLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2SPlatformLogin::SharedCtor() {
  _cached_size_ = 0;
  line_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  init_user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  verify_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SPlatformLogin::~C2SPlatformLogin() {
  SharedDtor();
}

void C2SPlatformLogin::SharedDtor() {
  if (line_no_ != &::google::protobuf::internal::kEmptyString) {
    delete line_no_;
  }
  if (init_user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete init_user_name_;
  }
  if (verify_param_ != &::google::protobuf::internal::kEmptyString) {
    delete verify_param_;
  }
  if (this != default_instance_) {
  }
}

void C2SPlatformLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SPlatformLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SPlatformLogin_descriptor_;
}

const C2SPlatformLogin& C2SPlatformLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NP_5fClientServer_2eproto();
  return *default_instance_;
}

C2SPlatformLogin* C2SPlatformLogin::default_instance_ = NULL;

C2SPlatformLogin* C2SPlatformLogin::New() const {
  return new C2SPlatformLogin;
}

void C2SPlatformLogin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_line_no()) {
      if (line_no_ != &::google::protobuf::internal::kEmptyString) {
        line_no_->clear();
      }
    }
    if (has_init_user_name()) {
      if (init_user_name_ != &::google::protobuf::internal::kEmptyString) {
        init_user_name_->clear();
      }
    }
    if (has_verify_param()) {
      if (verify_param_ != &::google::protobuf::internal::kEmptyString) {
        verify_param_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2SPlatformLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string line_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->line_no().data(), this->line_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_init_user_name;
        break;
      }

      // required string init_user_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_init_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_init_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->init_user_name().data(), this->init_user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_verify_param;
        break;
      }

      // optional string verify_param = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_verify_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->verify_param().data(), this->verify_param().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2SPlatformLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string line_no = 1;
  if (has_line_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->line_no().data(), this->line_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->line_no(), output);
  }

  // required string init_user_name = 2;
  if (has_init_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->init_user_name().data(), this->init_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->init_user_name(), output);
  }

  // optional string verify_param = 3;
  if (has_verify_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->verify_param().data(), this->verify_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->verify_param(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2SPlatformLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string line_no = 1;
  if (has_line_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->line_no().data(), this->line_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->line_no(), target);
  }

  // required string init_user_name = 2;
  if (has_init_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->init_user_name().data(), this->init_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->init_user_name(), target);
  }

  // optional string verify_param = 3;
  if (has_verify_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->verify_param().data(), this->verify_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->verify_param(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2SPlatformLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string line_no = 1;
    if (has_line_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->line_no());
    }

    // required string init_user_name = 2;
    if (has_init_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->init_user_name());
    }

    // optional string verify_param = 3;
    if (has_verify_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verify_param());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SPlatformLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2SPlatformLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SPlatformLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SPlatformLogin::MergeFrom(const C2SPlatformLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_line_no()) {
      set_line_no(from.line_no());
    }
    if (from.has_init_user_name()) {
      set_init_user_name(from.init_user_name());
    }
    if (from.has_verify_param()) {
      set_verify_param(from.verify_param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2SPlatformLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SPlatformLogin::CopyFrom(const C2SPlatformLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SPlatformLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void C2SPlatformLogin::Swap(C2SPlatformLogin* other) {
  if (other != this) {
    std::swap(line_no_, other->line_no_);
    std::swap(init_user_name_, other->init_user_name_);
    std::swap(verify_param_, other->verify_param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2SPlatformLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SPlatformLogin_descriptor_;
  metadata.reflection = C2SPlatformLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2SBingPhoneNumber::kUserCodeFieldNumber;
const int C2SBingPhoneNumber::kPhoneNumberFieldNumber;
const int C2SBingPhoneNumber::kSmsCodeFieldNumber;
#endif  // !_MSC_VER

C2SBingPhoneNumber::C2SBingPhoneNumber()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2SBingPhoneNumber::InitAsDefaultInstance() {
}

C2SBingPhoneNumber::C2SBingPhoneNumber(const C2SBingPhoneNumber& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2SBingPhoneNumber::SharedCtor() {
  _cached_size_ = 0;
  user_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phone_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sms_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SBingPhoneNumber::~C2SBingPhoneNumber() {
  SharedDtor();
}

void C2SBingPhoneNumber::SharedDtor() {
  if (user_code_ != &::google::protobuf::internal::kEmptyString) {
    delete user_code_;
  }
  if (phone_number_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_number_;
  }
  if (sms_code_ != &::google::protobuf::internal::kEmptyString) {
    delete sms_code_;
  }
  if (this != default_instance_) {
  }
}

void C2SBingPhoneNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SBingPhoneNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SBingPhoneNumber_descriptor_;
}

const C2SBingPhoneNumber& C2SBingPhoneNumber::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NP_5fClientServer_2eproto();
  return *default_instance_;
}

C2SBingPhoneNumber* C2SBingPhoneNumber::default_instance_ = NULL;

C2SBingPhoneNumber* C2SBingPhoneNumber::New() const {
  return new C2SBingPhoneNumber;
}

void C2SBingPhoneNumber::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_user_code()) {
      if (user_code_ != &::google::protobuf::internal::kEmptyString) {
        user_code_->clear();
      }
    }
    if (has_phone_number()) {
      if (phone_number_ != &::google::protobuf::internal::kEmptyString) {
        phone_number_->clear();
      }
    }
    if (has_sms_code()) {
      if (sms_code_ != &::google::protobuf::internal::kEmptyString) {
        sms_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2SBingPhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->user_code().data(), this->user_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_phone_number;
        break;
      }

      // required string phone_number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phone_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone_number().data(), this->phone_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sms_code;
        break;
      }

      // required string sms_code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sms_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sms_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sms_code().data(), this->sms_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2SBingPhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string user_code = 1;
  if (has_user_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_code().data(), this->user_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->user_code(), output);
  }

  // required string phone_number = 2;
  if (has_phone_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->phone_number(), output);
  }

  // required string sms_code = 3;
  if (has_sms_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sms_code().data(), this->sms_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sms_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2SBingPhoneNumber::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string user_code = 1;
  if (has_user_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_code().data(), this->user_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_code(), target);
  }

  // required string phone_number = 2;
  if (has_phone_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone_number(), target);
  }

  // required string sms_code = 3;
  if (has_sms_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sms_code().data(), this->sms_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sms_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2SBingPhoneNumber::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string user_code = 1;
    if (has_user_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_code());
    }

    // required string phone_number = 2;
    if (has_phone_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_number());
    }

    // required string sms_code = 3;
    if (has_sms_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sms_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SBingPhoneNumber::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2SBingPhoneNumber* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SBingPhoneNumber*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SBingPhoneNumber::MergeFrom(const C2SBingPhoneNumber& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_code()) {
      set_user_code(from.user_code());
    }
    if (from.has_phone_number()) {
      set_phone_number(from.phone_number());
    }
    if (from.has_sms_code()) {
      set_sms_code(from.sms_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2SBingPhoneNumber::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SBingPhoneNumber::CopyFrom(const C2SBingPhoneNumber& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SBingPhoneNumber::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void C2SBingPhoneNumber::Swap(C2SBingPhoneNumber* other) {
  if (other != this) {
    std::swap(user_code_, other->user_code_);
    std::swap(phone_number_, other->phone_number_);
    std::swap(sms_code_, other->sms_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2SBingPhoneNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SBingPhoneNumber_descriptor_;
  metadata.reflection = C2SBingPhoneNumber_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2SSendSMSCodeToPlayer::kPhoneNumberFieldNumber;
const int C2SSendSMSCodeToPlayer::kCodeTypeFieldNumber;
const int C2SSendSMSCodeToPlayer::kSelfparamsFieldNumber;
#endif  // !_MSC_VER

C2SSendSMSCodeToPlayer::C2SSendSMSCodeToPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2SSendSMSCodeToPlayer::InitAsDefaultInstance() {
}

C2SSendSMSCodeToPlayer::C2SSendSMSCodeToPlayer(const C2SSendSMSCodeToPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2SSendSMSCodeToPlayer::SharedCtor() {
  _cached_size_ = 0;
  phone_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  code_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  selfparams_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SSendSMSCodeToPlayer::~C2SSendSMSCodeToPlayer() {
  SharedDtor();
}

void C2SSendSMSCodeToPlayer::SharedDtor() {
  if (phone_number_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_number_;
  }
  if (code_type_ != &::google::protobuf::internal::kEmptyString) {
    delete code_type_;
  }
  if (selfparams_ != &::google::protobuf::internal::kEmptyString) {
    delete selfparams_;
  }
  if (this != default_instance_) {
  }
}

void C2SSendSMSCodeToPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSendSMSCodeToPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSendSMSCodeToPlayer_descriptor_;
}

const C2SSendSMSCodeToPlayer& C2SSendSMSCodeToPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NP_5fClientServer_2eproto();
  return *default_instance_;
}

C2SSendSMSCodeToPlayer* C2SSendSMSCodeToPlayer::default_instance_ = NULL;

C2SSendSMSCodeToPlayer* C2SSendSMSCodeToPlayer::New() const {
  return new C2SSendSMSCodeToPlayer;
}

void C2SSendSMSCodeToPlayer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_phone_number()) {
      if (phone_number_ != &::google::protobuf::internal::kEmptyString) {
        phone_number_->clear();
      }
    }
    if (has_code_type()) {
      if (code_type_ != &::google::protobuf::internal::kEmptyString) {
        code_type_->clear();
      }
    }
    if (has_selfparams()) {
      if (selfparams_ != &::google::protobuf::internal::kEmptyString) {
        selfparams_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2SSendSMSCodeToPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string phone_number = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone_number().data(), this->phone_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_code_type;
        break;
      }

      // required string code_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_code_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code_type().data(), this->code_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_selfparams;
        break;
      }

      // required string selfparams = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_selfparams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selfparams()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->selfparams().data(), this->selfparams().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2SSendSMSCodeToPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string phone_number = 1;
  if (has_phone_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->phone_number(), output);
  }

  // required string code_type = 2;
  if (has_code_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code_type().data(), this->code_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->code_type(), output);
  }

  // required string selfparams = 3;
  if (has_selfparams()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->selfparams().data(), this->selfparams().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->selfparams(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2SSendSMSCodeToPlayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string phone_number = 1;
  if (has_phone_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone_number(), target);
  }

  // required string code_type = 2;
  if (has_code_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code_type().data(), this->code_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code_type(), target);
  }

  // required string selfparams = 3;
  if (has_selfparams()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->selfparams().data(), this->selfparams().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->selfparams(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2SSendSMSCodeToPlayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string phone_number = 1;
    if (has_phone_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_number());
    }

    // required string code_type = 2;
    if (has_code_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code_type());
    }

    // required string selfparams = 3;
    if (has_selfparams()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->selfparams());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSendSMSCodeToPlayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2SSendSMSCodeToPlayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SSendSMSCodeToPlayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SSendSMSCodeToPlayer::MergeFrom(const C2SSendSMSCodeToPlayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_phone_number()) {
      set_phone_number(from.phone_number());
    }
    if (from.has_code_type()) {
      set_code_type(from.code_type());
    }
    if (from.has_selfparams()) {
      set_selfparams(from.selfparams());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2SSendSMSCodeToPlayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSendSMSCodeToPlayer::CopyFrom(const C2SSendSMSCodeToPlayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSendSMSCodeToPlayer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void C2SSendSMSCodeToPlayer::Swap(C2SSendSMSCodeToPlayer* other) {
  if (other != this) {
    std::swap(phone_number_, other->phone_number_);
    std::swap(code_type_, other->code_type_);
    std::swap(selfparams_, other->selfparams_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2SSendSMSCodeToPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSendSMSCodeToPlayer_descriptor_;
  metadata.reflection = C2SSendSMSCodeToPlayer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2SEnterGame::kInitUserNameFieldNumber;
const int C2SEnterGame::kUserPwdFieldNumber;
#endif  // !_MSC_VER

C2SEnterGame::C2SEnterGame()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2SEnterGame::InitAsDefaultInstance() {
}

C2SEnterGame::C2SEnterGame(const C2SEnterGame& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2SEnterGame::SharedCtor() {
  _cached_size_ = 0;
  init_user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  user_pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SEnterGame::~C2SEnterGame() {
  SharedDtor();
}

void C2SEnterGame::SharedDtor() {
  if (init_user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete init_user_name_;
  }
  if (user_pwd_ != &::google::protobuf::internal::kEmptyString) {
    delete user_pwd_;
  }
  if (this != default_instance_) {
  }
}

void C2SEnterGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SEnterGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SEnterGame_descriptor_;
}

const C2SEnterGame& C2SEnterGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NP_5fClientServer_2eproto();
  return *default_instance_;
}

C2SEnterGame* C2SEnterGame::default_instance_ = NULL;

C2SEnterGame* C2SEnterGame::New() const {
  return new C2SEnterGame;
}

void C2SEnterGame::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_init_user_name()) {
      if (init_user_name_ != &::google::protobuf::internal::kEmptyString) {
        init_user_name_->clear();
      }
    }
    if (has_user_pwd()) {
      if (user_pwd_ != &::google::protobuf::internal::kEmptyString) {
        user_pwd_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2SEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string init_user_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_init_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->init_user_name().data(), this->init_user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_user_pwd;
        break;
      }

      // required string user_pwd = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user_pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_pwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->user_pwd().data(), this->user_pwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2SEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string init_user_name = 1;
  if (has_init_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->init_user_name().data(), this->init_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->init_user_name(), output);
  }

  // required string user_pwd = 2;
  if (has_user_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_pwd().data(), this->user_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->user_pwd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2SEnterGame::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string init_user_name = 1;
  if (has_init_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->init_user_name().data(), this->init_user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->init_user_name(), target);
  }

  // required string user_pwd = 2;
  if (has_user_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_pwd().data(), this->user_pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_pwd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2SEnterGame::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string init_user_name = 1;
    if (has_init_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->init_user_name());
    }

    // required string user_pwd = 2;
    if (has_user_pwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_pwd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2SEnterGame* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SEnterGame*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SEnterGame::MergeFrom(const C2SEnterGame& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_init_user_name()) {
      set_init_user_name(from.init_user_name());
    }
    if (from.has_user_pwd()) {
      set_user_pwd(from.user_pwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2SEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SEnterGame::CopyFrom(const C2SEnterGame& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SEnterGame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void C2SEnterGame::Swap(C2SEnterGame* other) {
  if (other != this) {
    std::swap(init_user_name_, other->init_user_name_);
    std::swap(user_pwd_, other->user_pwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2SEnterGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SEnterGame_descriptor_;
  metadata.reflection = C2SEnterGame_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

C2SHeartBeat::C2SHeartBeat()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2SHeartBeat::InitAsDefaultInstance() {
}

C2SHeartBeat::C2SHeartBeat(const C2SHeartBeat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2SHeartBeat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SHeartBeat::~C2SHeartBeat() {
  SharedDtor();
}

void C2SHeartBeat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SHeartBeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SHeartBeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SHeartBeat_descriptor_;
}

const C2SHeartBeat& C2SHeartBeat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NP_5fClientServer_2eproto();
  return *default_instance_;
}

C2SHeartBeat* C2SHeartBeat::default_instance_ = NULL;

C2SHeartBeat* C2SHeartBeat::New() const {
  return new C2SHeartBeat;
}

void C2SHeartBeat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2SHeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void C2SHeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2SHeartBeat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2SHeartBeat::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SHeartBeat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2SHeartBeat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SHeartBeat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SHeartBeat::MergeFrom(const C2SHeartBeat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2SHeartBeat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SHeartBeat::CopyFrom(const C2SHeartBeat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SHeartBeat::IsInitialized() const {

  return true;
}

void C2SHeartBeat::Swap(C2SHeartBeat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2SHeartBeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SHeartBeat_descriptor_;
  metadata.reflection = C2SHeartBeat_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace net_protocol

// @@protoc_insertion_point(global_scope)
